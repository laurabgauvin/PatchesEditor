<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:PatchesEditor.Converters"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    x:Name="ApplicationStyles">

    <!--#region Text Box styles-->
    <Style
        x:Key="LightFilledTextBox"
        BasedOn="{StaticResource MaterialDesignTextBox}"
        TargetType="TextBox">
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
        <Setter Property="SpellCheck.IsEnabled" Value="{Binding AppParameters.Spellcheck}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Margin" Value="0,10,0,0" />
    </Style>

    <Style
        x:Key="TextParamValue"
        BasedOn="{StaticResource MaterialDesignTextBox}"
        TargetType="TextBox">
        <Setter Property="Margin" Value="10" />
    </Style>
    <!--#endregion-->

    <!--#region Text Block styles-->
    <Style x:Key="FieldLabel" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,10,20,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="ParameterBoxTitle" TargetType="TextBlock">
        <Setter Property="Margin" Value="9" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>

    <Style x:Key="ParameterListItem" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextParamName" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,10,0,10" />
    </Style>
    <!--#endregion-->

    <!--#region Button styles-->
    <Style
        x:Key="MiniLightAccentButton"
        BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueLightForegroundBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="10,10,0,0" />
    </Style>

    <Style
        x:Key="LightAccentButton"
        BasedOn="{StaticResource MaterialDesignFloatingActionAccentButton}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueLightForegroundBrush}" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="10,0,0,0" />
    </Style>

    <Style
        x:Key="AddValueButton"
        BasedOn="{StaticResource MiniLightAccentButton}"
        TargetType="Button">
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="DeleteValueButton"
        BasedOn="{StaticResource MaterialDesignIconButton}"
        TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style
        x:Key="LargeButtonStyle"
        BasedOn="{StaticResource MaterialDesignRaisedButton}"
        TargetType="Button">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Margin" Value="50" />
        <Setter Property="Height" Value="75" />
        <Setter Property="Width" Value="200" />
    </Style>

    <Style
        x:Key="FlatButtonStyle"
        BasedOn="{StaticResource MaterialDesignFlatButton}"
        TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10,100,10,0" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="120" />
    </Style>
    <!--#endregion-->

    <!--#region Icon styles-->
    <Style x:Key="LightAccentButtonIcon" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
    </Style>
    <!--#endregion-->

    <!--#region Chip styles-->
    <Style x:Key="PersonChip" TargetType="materialDesign:Chip">
        <Setter Property="Background" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueLightForegroundBrush}" />
        <Setter Property="IsDeletable" Value="True" />
        <Setter Property="Margin" Value="0,5,5,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="DeleteCommandParameter" Value="{Binding}" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Focusable" Value="False" />
        <!--  Entirely copied from material design code  -->
        <!--  The only change I made was having the delete button not a tab stop  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="materialDesign:Chip">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.ColumnSpan="3"
                            Background="{TemplateBinding Background}"
                            CornerRadius="16" />
                        <ContentControl
                            x:Name="IconControl"
                            Width="32"
                            Height="32"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="{TemplateBinding IconBackground}"
                            Content="{TemplateBinding Icon}"
                            FontSize="17"
                            FontWeight="Regular"
                            Foreground="{TemplateBinding IconForeground}"
                            IsTabStop="False"
                            Visibility="{TemplateBinding Icon,
                                                         Converter={StaticResource NullableToVisibilityConverter}}">
                            <ContentControl.Clip>
                                <EllipseGeometry
                                    Center="16,16"
                                    RadiusX="16"
                                    RadiusY="16" />
                            </ContentControl.Clip>
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}" />
                                    </Border>
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <ContentControl
                            x:Name="TextBlock"
                            Grid.Column="1"
                            Margin="8,0,12,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            IsTabStop="False" />
                        <Button
                            x:Name="PART_DeleteButton"
                            Grid.Column="2"
                            Width="16"
                            Height="16"
                            Margin="-6,0,8,0"
                            VerticalAlignment="Center"
                            IsTabStop="False"
                            ToolTip="{TemplateBinding DeleteToolTip}"
                            Visibility="{TemplateBinding IsDeletable,
                                                         Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Ellipse
                                            x:Name="Bg"
                                            Fill="#FFA6A6A6"
                                            Stroke="#FF009587"
                                            StrokeThickness="0" />
                                        <materialDesign:PackIcon
                                            Width="12"
                                            Height="12"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Kind="Close" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Bg" Property="StrokeThickness" Value="1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="IconControl" Property="Visibility" Value="Collapsed">
                            <Setter TargetName="TextBlock" Property="Margin" Value="12,0,12,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Radio Button styles-->
    <Style
        x:Key="PrimaryOutlineRadio"
        BasedOn="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}"
        TargetType="RadioButton">
        <Setter Property="Margin" Value="3,-50" />
    </Style>
    <Style
        x:Key="AccentOutlineRadio"
        BasedOn="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}"
        TargetType="RadioButton">
        <Setter Property="Margin" Value="3,-5" />
    </Style>
    <!--#endregion-->

    <!--#region Expander styles-->
    <DataTemplate x:Key="expanderTitleText">
        <TextBlock
            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=ActualWidth}"
            Margin="-20,0,0,0"
            VerticalAlignment="Center"
            FontSize="16"
            Style="{StaticResource FieldLabel}"
            Text="{Binding}" />
    </DataTemplate>
    <Style
        x:Key="ExpanderStyle"
        BasedOn="{StaticResource MaterialDesignExpander}"
        TargetType="{x:Type Expander}">
        <Setter Property="HeaderTemplate" Value="{StaticResource expanderTitleText}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsExpanded" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region Border styles-->
    <Style x:Key="TreeViewItemsBorder" TargetType="Border">
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClipToBounds" Value="True" />
    </Style>

    <Style x:Key="ParameterBoxBorder" TargetType="Border">
        <Setter Property="Margin" Value="0,0,5,5" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClipToBounds" Value="True" />
    </Style>

    <Style x:Key="ParameterListDivider" TargetType="Border">
        <Setter Property="Padding" Value="8" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    <!--#endregion-->

    <!--#region Colour Zone styles-->
    <Style x:Key="ColourZoneTitle" TargetType="materialDesign:ColorZone">
        <Setter Property="Effect" Value="{DynamicResource MaterialDesignShadowDepth2}" />
        <Setter Property="Mode" Value="PrimaryMid" />
    </Style>
    <!--#endregion-->

    <!--#region Tab Item styles-->
    <Style BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}" TargetType="TabItem">
        <Setter Property="Width" Value="95" />
    </Style>
    <!--#endregion-->

    <!--#region ComboBox styles-->
    <Style
        x:Key="TextParamCombo"
        BasedOn="{StaticResource MaterialDesignComboBox}"
        TargetType="ComboBox">
        <Setter Property="Margin" Value="10" />
    </Style>
    <!--#endregion-->

    <!--#region List Box styles-->
    <Style x:Key="PrimaryRadioButtonListBox" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RadioButton
                        Content="{Binding}"
                        IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource PrimaryOutlineRadio}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentRadioButtonListBox" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RadioButton
                        Content="{Binding}"
                        IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource AccentOutlineRadio}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ListBoxNoScroll" TargetType="ListBox">
        <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ItemsPresenter />
        </Border>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region DataGrid styles-->
    <ControlTemplate x:Key="DataGridNoScroll" TargetType="DataGrid">
        <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <DataGridColumnHeadersPresenter Grid.Row="0" />
                <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Tree View styles-->
    <ControlTemplate x:Key="TreeViewNoScroll" TargetType="TreeView">
        <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ItemsPresenter />
        </Border>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Converters-->
    <converters:BoolToVisibilityConverter x:Key="BoolVisibilityConverter" />
    <converters:BoolToVisibilityInvertConverter x:Key="InvertBoolVisibilityConverter" />

    <converters:ReferenceTypeToStringConverter x:Key="ReferenceTypeStringConverter" />
    <converters:LogLevelToStringConverter x:Key="LogLevelStringConverter" />
    <converters:DependenciesTypeToStringConverter x:Key="DependenciesTypeConverter" />
    <converters:DependencyStatusToStringConverter x:Key="DependenciesStatusConverter" />
    <!--#endregion-->

</ResourceDictionary>